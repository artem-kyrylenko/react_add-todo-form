{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","completed","title","classNames","TodoList","todos","map","username","userId","usersFromServer","find","App","useState","setTitle","userName","setUserName","visibleTodos","setTodos","titleValid","checkTitleValid","userNameValid","checkUserNameValid","action","method","onSubmit","event","preventDefault","chosenUser","userIds","maxUserId","Math","max","newTodo","handleSubmit","htmlFor","type","placeholder","value","onChange","titleValue","target","chosenValue","disabled","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAAgC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,EAAoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEhDC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,UACAC,EAEEH,EAFFG,MACAT,EACEM,EADFN,KAGF,OACE,0BACE,UAASO,EACTJ,UAAWO,IAAW,WACpB,CAAE,sBAAuBF,IAH7B,UAKE,oBAAIL,UAAU,kBAAd,SACGM,IAGFT,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QCnBlBW,EAAoC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClD,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKC,UCXzB,GACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BC9CLU,ECbS,CACb,CACEL,GAAI,EACJE,MAAO,qBACPD,WAAW,EACXO,OAAQ,GAEV,CACER,GAAI,GACJE,MAAO,kBACPD,WAAW,EACXO,OAAQ,GAEV,CACER,GAAI,EACJE,MAAO,qCACPD,WAAW,EACXO,OAAQ,IDJkBF,KAAI,SAACP,GACjC,OAAO,2BACFA,GADL,IAEEN,MATkBe,EASCT,EAAKS,OARnBC,EAAgBC,MAAK,SAACjB,GAAD,OAC1BA,EAAKO,KAAOQ,MACR,QAHa,IAACA,KAaTG,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOV,EAAP,KAAcW,EAAd,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAiCH,mBAASP,GAA1C,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA4CP,oBAAS,GAArD,mBAAOQ,EAAP,KAAsBC,EAAtB,KAkDA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,aACPC,OAAO,OACPC,SAAU,SAACC,GAAD,OA7CK,SAACA,GACpBA,EAAMC,iBAEDxB,GACHiB,GAAgB,GAGbL,GACHO,GAAmB,GAGrB,IAAMM,EAAalB,EAChBC,MAAK,SAACjB,GAAD,OAAWA,EAAKC,OAASoB,MAAc,KAE/C,GAAIZ,GAASY,EAAU,CACrB,IAAMc,EAAUnB,EAAgBH,KAAI,SAACb,GAAD,OAAUA,EAAKO,MAC7C6B,EAAYC,KAAKC,IAAL,MAAAD,KAAI,YAAQF,IAAW,EAEzC,GAAID,EAAY,CACd,IAAMK,EAAgB,CACpBhC,GAAI6B,EACJ3B,QACAM,OAAQmB,EAAW3B,GACnBC,WAAW,EACXR,KAAMkC,GAGRV,EAAS,GAAD,mBACHD,GADG,CAENgB,KAGFnB,EAAS,IACTE,EAAY,MAYSkB,CAAaR,IAHpC,UAKE,sBAAK7B,UAAU,QAAf,UACE,wBAAOsC,QAAQ,aAAf,yBAEE,uBACEC,KAAK,OACL,UAAQ,aACRnC,GAAG,aACHoC,YAAY,gBACZC,MAAOnC,EACPoC,SAAU,SAACb,GAAD,OAlEDc,EAkEwBd,EAAMe,OAAOH,MAjExDlB,GAAgB,QAChBN,EAAS0B,GAFS,IAACA,SAqEXrB,GAAc,sBAAMtB,UAAU,QAAhB,qCAGlB,sBAAKA,UAAU,QAAf,UACE,wBAAOsC,QAAQ,aAAf,yBAEE,yBACE,UAAQ,aACRlC,GAAG,aACHqC,MAAOvB,EACPwB,SAAU,SAACb,GAAD,OA1EFgB,EA0EwBhB,EAAMe,OAAOH,MAzEvDhB,GAAmB,QACnBN,EAAY0B,GAFK,IAACA,GAsEV,UAME,wBAAQJ,MAAM,GAAGK,UAAQ,EAAzB,2BAECjC,EAAgBH,KAAI,SAACb,GAAD,OACnB,iCACGA,EAAKC,MADKD,EAAKO,cAMtBoB,GACG,sBAAMxB,UAAU,QAAhB,qCAGP,wBAAQuC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU9B,MAAOW,QE3HvB2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.43269ee4.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../types/User';\n\ninterface UserProps {\n  user: User;\n}\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo',\n        { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FormEvent, useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nconst findUserById = (userId: number) => {\n  return usersFromServer.find((user) => (\n    user.id === userId\n  )) || null;\n};\n\nconst todos = todosFromServer.map((todo) => {\n  return {\n    ...todo,\n    user: findUserById(todo.userId),\n  };\n});\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [visibleTodos, setTodos] = useState(todos);\n  const [titleValid, checkTitleValid] = useState(true);\n  const [userNameValid, checkUserNameValid] = useState(true);\n\n  const handleTitle = (titleValue: string) => {\n    checkTitleValid(true);\n    setTitle(titleValue);\n  };\n\n  const handleUser = (chosenValue: string) => {\n    checkUserNameValid(true);\n    setUserName(chosenValue);\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      checkTitleValid(false);\n    }\n\n    if (!userName) {\n      checkUserNameValid(false);\n    }\n\n    const chosenUser = usersFromServer\n      .find((user) => (user.name === userName)) || null;\n\n    if (title && userName) {\n      const userIds = usersFromServer.map((user) => user.id);\n      const maxUserId = Math.max(...userIds) + 1;\n\n      if (chosenUser) {\n        const newTodo: Todo = {\n          id: maxUserId,\n          title,\n          userId: chosenUser.id,\n          completed: false,\n          user: chosenUser,\n        };\n\n        setTodos([\n          ...visibleTodos,\n          newTodo,\n        ]);\n\n        setTitle('');\n        setUserName('');\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Enter title:\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              id=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => handleTitle(event.target.value)}\n            />\n          </label>\n          {!titleValid && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            Choose user:\n            <select\n              data-cy=\"userSelect\"\n              id=\"userSelect\"\n              value={userName}\n              onChange={(event) => handleUser(event.target.value)}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n\n              {usersFromServer.map((user) => (\n                <option key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {!userNameValid\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}